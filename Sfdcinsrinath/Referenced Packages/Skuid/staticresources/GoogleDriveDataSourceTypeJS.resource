"use strict";!function(a){var b=a.$,c=b.each,d=b.Deferred,e=a.utils,f=a.dataSource.utils,g=e.mergeAsTextInContext,h=a.dataSource,i=a.constants,j=i.DATASOURCE,k=i.DISPLAY_TYPES,l=i.HTTP_VERBS,m="https://www.googleapis.com/auth/drive",n=k.ARRAY,o=k.BOOLEAN,p=k.DATETIME,q=k.NUMBER,r=k.STRING,s=l.GET,t=l.POST,u=l.DELETE,v="Parent Folder",w=j.SEARCH_CONDITION;h.getDataSourceType("GoogleDrive")||new h.core.RESTDataSourceTypeBase({name:"GoogleDrive",coerceRequest:function(a){var b,c,d,e,g,h=a.model,i=f.getModelMergeConditions(h,a,{urlEncode:!1}),j="?q=trashed+%3D+false";"query"!==a.type&&"search"!==a.type||(b=i[v],c=i.Title,d=i.Mimetype,e=i[w],g=i.search,b&&(j+=encodeURIComponent(" and '"+b+"' in parents")),c&&(j+=encodeURIComponent(" and title contains '"+c+"'")),d&&(-1!==d.indexOf("/")?j+=encodeURIComponent(" and mimeType = '"+d+"'"):j+=encodeURIComponent(" and mimeType contains '"+d+"'")),"search"===a.type&&(j+=encodeURIComponent(" and title contains '"+g+"'")),e&&(j+=encodeURIComponent(" and fullText contains '"+e+"'")),a.request.url="/files"+j.replace(/%20/g,"+"))},parseSuccessfulLoadResponse:function(a,b,c){f.parseSuccessfulLoadResponseWithSynonyms(a,b,c),f.safeEach(c.data,function(a,b){b.downloadlink=b.webContentLink||b.embedLink})},getUploadMethods:function(){function b(b,d,f,h,i){var j=f.model,k=e.renameFileWhileKeepingExtension(b.name,g(f.filename,f)),l=d.options.xmlDef,m=j?j.getDataSource():a.dataSource.get(l.attr("datasource")),n="-------314159265358979323846",o="\r\n--"+n+"\r\n",p=new FileReader;p.readAsBinaryString(b),p.onload=function(){var a,d=b.type||"application/octet-stream",e={title:k,mimeType:d};j?c(j.conditions,function(b,c){if(c.sourceParam===v&&c.value)return a=g(c.value,{model:j}),-1}):a=g(l.attr("folder"),f),a&&(e.parents=[{id:a}]);var q=btoa(p.result),r=o+"Content-Type: application/json\r\n\r\n"+JSON.stringify(e)+o+"Content-Type: "+d+"\r\nContent-Transfer-Encoding: base64\r\n\r\n"+q+"\r\n---------314159265358979323846--",s={path:"/upload/drive/v2/files",method:t,params:{uploadType:"multipart"},headers:{"Content-Type":'multipart/mixed; boundary="'+n+'"'},body:r},u=new XMLHttpRequest,w=!1;u.open("POST","https://www.googleapis.com/upload/drive/v2/files?uploadType=multipart",!0),h({fileName:b.name}),u.onreadystatechange=function(a){a&&(!w&&a.target.response&&200===a.target.status?(w=!0,i()):a.target.status>=400&&i({message:"Had an Error!"}))},u.setRequestHeader("Authorization","Bearer "+m.authentication.responseBody.access_token),u.setRequestHeader("Content-Type",s.headers["Content-Type"]),u.send(s.body)}}return{"Direct Upload":{label:"Direct Upload",canRunPostUploadSnippet:!0,upload:b,needsModelInContext:!0,hasDescription:!1,builderProps:function(a,b){var c=[];return b.attr("model")||c.push({id:"folder",type:"template",label:"Parent Folder ID",helptext:"The ID of the folder you want this file to be placed within",location:"attribute",displayAs:"input"}),c}}}},getConditionSourceProperties:function(b,c){var d=a.builder.core,e=b.state;return[{label:"Query Parameter",deleteable:!1,linkedComponent:b,summaryFunction:function(a){return d.conditionDescriptionRenderers.parameter(a)},propsFunction:function(a){return[{id:"sourceparam",label:"Query Parameter Name",onChange:function(d,f){"param"!==e.attr("sourcetype")&&(e.attr("sourcetype","param"),e.attr("sourceparam",f),b.save()),b.refresh(),c.handleChange&&c.handleChange(a)()},type:"picklist",picklistEntries:[{value:"Title",label:"Title"},{value:v,label:v},{value:"Mimetype",label:"Mimetype"}]}]}}]},createActions:function(b){function f(b,f,g,h,i){var j,k=new XMLHttpRequest,l=a.$M(b.attr("model")),m="root",n=e.mergeAsTextInContext(b.attr("foldername"),g),o=d();return c(l.conditions,function(a,b){b.sourceParam===v&&(m=e.mergeAsTextInContext(b.value,g)||m)}),j={parents:[{id:m}],title:n,mimeType:i},k.open("POST","https://www.googleapis.com/drive/v2/files",!0),k.setRequestHeader("Authorization","Bearer "+h.authentication.responseBody.access_token),k.setRequestHeader("Content-Type","application/json"),k.send(JSON.stringify(j)),k.onreadystatechange=function(a){a&&(a.target.response&&200===a.target.status?o.resolve(a):a.target.status>=400&&o.reject(a))},o.promise()}return{"create-file":{label:"Create New",builderProps:[{label:"Model with Parent Folder Condition",id:"model",type:"model",helptext:"Will take the value in this model's parent folder condition, and use it as the parent folder for the new folder",entryFilter:e.filterByDataSourceAndEntity(b.name,"File")},{label:"Name",id:"foldername",type:"string"},{label:"Type",id:"mimetype",type:"picklist",picklistEntries:[{value:"-",label:"New Folder",disabled:!0},{label:"Folder",value:"application/vnd.google-apps.folder",defaultValue:!0},{value:"-",label:"",disabled:!0},{value:"-",label:"Standard Files",disabled:!0},{label:"Document",value:"application/vnd.google-apps.document",defaultValue:!0},{label:"Spreadsheet",value:"application/vnd.google-apps.spreadsheet",defaultValue:!1},{label:"Slides",value:"application/vnd.google-apps.presentation",defaultValue:!1},{value:"-",label:"",disabled:!0},{value:"-",label:"Extra",disabled:!0},{label:"Form",value:"application/vnd.google-apps.form",defaultValue:!1},{label:"Drawing",value:"application/vnd.google-apps.drawing",defaultValue:!1}]}],runtimeExecution:function(a,b,c,d){return f(a,b,c,d,a.attr("mimetype"))}}}},queryEntityMetadata:f.queryEntityMetadataStatic,getEntityList:f.getEntityListStatic,getActions:f.getActionsStatic,extendedProperties:{composer:{unomittableFields:!0,hasEntityOptions:!0},hasDefaultSearch:!0,canServerSearch:!0,hasGlobalSearchEntities:!0,"x-metadata":{__skuid_fieldDefaults:{File:{displaytype:r,writeable:!1,filterable:!1}},File:{idFields:["id"],nameField:"title",label:"File",labelPlural:"Files",fields:[{id:"id",inlineHelpText:"The ID of the file.","x-alwaysinclude":!0},{id:"etag",inlineHelpText:"ETag of the file."},{id:"title",inlineHelpText:"The title of the file. Used to identify file or folder name."},{id:"mimeType",inlineHelpText:"The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."},{id:"downloadlink",label:"Download/Preview Link",inlineHelpText:"For google native file types, will link to the file in google drive, otherwise the link will be a download link."},{id:"description",inlineHelpText:"A short description of the file."},{id:"createdDate",displaytype:p,inlineHelpText:"Create time for this file (formatted RFC 3339 timestamp)."},{id:"modifiedDate",displaytype:p,inlineHelpText:"Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set."},{id:"modifiedByMeDate",displaytype:p,inlineHelpText:"Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date."},{id:"fileExtension",inlineHelpText:"The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."},{id:"md5Checksum",inlineHelpText:"An MD5 checksum for the content of this file. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."},{id:"fileSize",displaytype:q,inlineHelpText:"The size of the file in bytes. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."},{id:"sharedWithMeDate",label:"Shared With Me Date",displaytype:p,inlineHelpText:"Time at which this file was shared with the user (formatted RFC 3339 timestamp)."},{id:"originalFilename",inlineHelpText:"The original filename of the uploaded content if available, or else the original value of the title field. This is only available for files with binary content in Drive."},{id:"ownerNames",displaytype:n,inlineHelpText:"Name(s) of the owner(s) of this file."},{id:"lastModifyingUserName",synonym:"lastModifyingUser.displayName",inlineHelpText:"Name of the last user to modify this file."},{id:"editable",displaytype:o,inlineHelpText:"Whether the file can be edited by the current user."},{id:"writersCanShare",displaytype:o,inlineHelpText:"Whether writers can share the document with other users."},{id:"thumbnailLink",inlineHelpText:"A short-lived link to the file's thumbnail. Typically lasts on the order of hours."},{id:"lastViewedByMeDate",displaytype:p,inlineHelpText:"Last time this file was viewed by the user (formatted RFC 3339 timestamp)."},{id:"webViewLink",inlineHelpText:"A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."},{id:"iconLink",inlineHelpText:"A link to the file's icon."},{id:"shared",displaytype:o,inlineHelpText:"Whether the file has been shared."},{id:"lastModifyingUserName",inlineHelpText:"A plain text displayable name for this user."},{id:"lastModifyingUserPicture",synonym:"lastModifyingUser.picture.url",inlineHelpText:"A URL that points to a profile picture of this user."},{id:"copyable",displaytype:o,inlineHelpText:"Whether the file can be copied by the current user."},{id:"properties",displaytype:n,inlineHelpText:"The list of properties."},{id:"lastModifyingUserEmail",synonym:"lastModifyingUser.email",inlineHelpText:"The email address of the user. This field is returned only if the last modifying user is an owner of the file, the requesting user is an owner or can modify the file, or if the last modifying user's email address is visible."},{id:"markedViewedByMeDate",displaytype:p,inlineHelpText:"Deprecated."},{id:"version",displaytype:q,inlineHelpText:"A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user."},{id:"folderColorRgb",inlineHelpText:"Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."},{id:"fullFileExtension",inlineHelpText:'The full file extension; extracted from the title. May contain multiple concatenated extensions, such as "tar.gz". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.'},{id:"starred",synonym:"labels.starred",inlineHelpText:"Whether or not the file has been starred."},{id:"haveViewed",synonym:"labels.viewed",inlineHelpText:"Whether or not the current user has viewed the file."},{id:"userPermissionRole",synonym:"userPermission.role",inlineHelpText:"The current user's permission role for the file."},{id:"ownedByMe",displaytype:o,inlineHelpText:"Whether the file is owned by the current user."},{id:"canComment",displaytype:o,inlineHelpText:"Whether the current user can comment on the file."},{id:"shareable",displaytype:o,inlineHelpText:"Whether the file's sharing settings can be modified by the current user."},{id:"spaces",displaytype:n,inlineHelpText:"The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'."},{id:"canReadRevisions",displaytype:o,inlineHelpText:"Whether the current user has read access to the Revisions resource of the file."}],methods:{query:{pathToContent:"items",url:"/files",verb:s,scopes:[m],contentType:"application/json"},"delete":{url:"/files/{{id}}",verb:u,scopes:[m],successIf:"requestsucceeds"},search:{url:"/files",verb:s,scopes:[m],contentType:"application/json",pathToContent:"items"}},defaultConditions:[{sourcetype:"param",sourceparam:v,name:v,label:v,state:"filterableon",value:"root"},{sourcetype:"param",sourceparam:"Title",name:"title",label:"Title",state:"filterableon",value:""},{sourcetype:"param",sourceparam:"Mimetype",name:"mimetype",label:"Mimetype",state:"filterableon",value:""}]}}}})}(skuid);